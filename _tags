# OASIS_START
# DO NOT EDIT (digest: e8fe55f623202fc801360d6e9fa0b525)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library tcpip
"lib/tcpip.cmxs": use_tcpip
<lib/*.ml{,i,y}>: oasis_library_tcpip_ccopt
"lib/checksum_stubs.c": oasis_library_tcpip_ccopt
<lib/tcpip.{cma,cmxa}>: use_libtcpip_stubs
"lib/checksum_stubs.c": pkg_bytes
"lib/checksum_stubs.c": pkg_cstruct
"lib/checksum_stubs.c": pkg_io-page
"lib/checksum_stubs.c": pkg_ipaddr
"lib/checksum_stubs.c": pkg_mirage-profile
"lib/checksum_stubs.c": pkg_mirage-types
# Library ipv4
"lib/ipv4.cmxs": use_ipv4
# Library ipv6
"lib/ipv6.cmxs": use_ipv6
# Library udp
"lib/udp.cmxs": use_udp
<lib/*.ml{,i,y}>: pkg_bytes
<lib/*.ml{,i,y}>: pkg_cstruct
<lib/*.ml{,i,y}>: pkg_io-page
<lib/*.ml{,i,y}>: pkg_ipaddr
<lib/*.ml{,i,y}>: pkg_lwt
<lib/*.ml{,i,y}>: pkg_mirage-profile
<lib/*.ml{,i,y}>: pkg_mirage-types
<lib/*.ml{,i,y}>: use_tcpip
# Library tcp
"tcp/tcp.cmxs": use_tcp
"tcp/options.cmx": for-pack(Tcp)
"tcp/wire.cmx": for-pack(Tcp)
"tcp/state.cmx": for-pack(Tcp)
"tcp/tcptimer.cmx": for-pack(Tcp)
"tcp/sequence.cmx": for-pack(Tcp)
"tcp/ack.cmx": for-pack(Tcp)
"tcp/window.cmx": for-pack(Tcp)
"tcp/segment.cmx": for-pack(Tcp)
"tcp/user_buffer.cmx": for-pack(Tcp)
"tcp/pcb.cmx": for-pack(Tcp)
"tcp/flow.cmx": for-pack(Tcp)
<tcp/*.ml{,i,y}>: pkg_bytes
<tcp/*.ml{,i,y}>: pkg_cstruct
<tcp/*.ml{,i,y}>: pkg_io-page
<tcp/*.ml{,i,y}>: pkg_ipaddr
<tcp/*.ml{,i,y}>: pkg_lwt
<tcp/*.ml{,i,y}>: pkg_mirage-profile
<tcp/*.ml{,i,y}>: pkg_mirage-types
<tcp/*.ml{,i,y}>: use_ipv4
<tcp/*.ml{,i,y}>: use_ipv6
<tcp/*.ml{,i,y}>: use_tcpip
# Library channel
"channel/channel.cmxs": use_channel
<channel/*.ml{,i,y}>: pkg_cstruct
<channel/*.ml{,i,y}>: pkg_io-page
<channel/*.ml{,i,y}>: pkg_ipaddr
<channel/*.ml{,i,y}>: pkg_lwt
<channel/*.ml{,i,y}>: pkg_mirage-types
# Library dhcpv4
"dhcp/dhcpv4.cmxs": use_dhcpv4
<dhcp/*.ml{,i,y}>: pkg_bytes
<dhcp/*.ml{,i,y}>: pkg_cstruct
<dhcp/*.ml{,i,y}>: pkg_io-page
<dhcp/*.ml{,i,y}>: pkg_ipaddr
<dhcp/*.ml{,i,y}>: pkg_lwt
<dhcp/*.ml{,i,y}>: pkg_mirage-profile
<dhcp/*.ml{,i,y}>: pkg_mirage-types
<dhcp/*.ml{,i,y}>: use_tcpip
<dhcp/*.ml{,i,y}>: use_udp
# Library udpv4-socket
"unix/udpv4-socket.cmxs": use_udpv4-socket
# Library udpv6-socket
"unix/udpv6-socket.cmxs": use_udpv6-socket
# Library tcpv4-socket
"unix/tcpv4-socket.cmxs": use_tcpv4-socket
# Library tcpv6-socket
"unix/tcpv6-socket.cmxs": use_tcpv6-socket
# Library tcpip-stack-socket
"unix/tcpip-stack-socket.cmxs": use_tcpip-stack-socket
<unix/*.ml{,i,y}>: pkg_bytes
<unix/*.ml{,i,y}>: pkg_cstruct
<unix/*.ml{,i,y}>: pkg_cstruct.lwt
<unix/*.ml{,i,y}>: pkg_io-page
<unix/*.ml{,i,y}>: pkg_io-page.unix
<unix/*.ml{,i,y}>: pkg_ipaddr
<unix/*.ml{,i,y}>: pkg_ipaddr.unix
<unix/*.ml{,i,y}>: pkg_lwt
<unix/*.ml{,i,y}>: pkg_lwt.unix
<unix/*.ml{,i,y}>: pkg_mirage-profile
<unix/*.ml{,i,y}>: pkg_mirage-types
<unix/*.ml{,i,y}>: use_tcpip
<unix/*.ml{,i,y}>: use_tcpv4-socket
<unix/*.ml{,i,y}>: use_tcpv6-socket
<unix/*.ml{,i,y}>: use_udp
<unix/*.ml{,i,y}>: use_udpv4-socket
<unix/*.ml{,i,y}>: use_udpv6-socket
# Executable test
"lib_test/test.byte": oasis_executable_test_byte
<lib_test/*.ml{,i,y}>: oasis_executable_test_byte
"lib_test/test.byte": pkg_alcotest
"lib_test/test.byte": pkg_bytes
"lib_test/test.byte": pkg_cstruct
"lib_test/test.byte": pkg_io-page
"lib_test/test.byte": pkg_io-page.unix
"lib_test/test.byte": pkg_ipaddr
"lib_test/test.byte": pkg_lwt
"lib_test/test.byte": pkg_lwt.unix
"lib_test/test.byte": pkg_mirage-console.unix
"lib_test/test.byte": pkg_mirage-flow
"lib_test/test.byte": pkg_mirage-profile
"lib_test/test.byte": pkg_mirage-types
"lib_test/test.byte": pkg_mirage-vnetif
"lib_test/test.byte": pkg_oUnit
"lib_test/test.byte": pkg_tcpip.ethif
"lib_test/test.byte": use_channel
"lib_test/test.byte": use_ipv4
"lib_test/test.byte": use_ipv6
"lib_test/test.byte": use_tcp
"lib_test/test.byte": use_tcpip
<lib_test/*.ml{,i,y}>: pkg_alcotest
<lib_test/*.ml{,i,y}>: pkg_bytes
<lib_test/*.ml{,i,y}>: pkg_cstruct
<lib_test/*.ml{,i,y}>: pkg_io-page
<lib_test/*.ml{,i,y}>: pkg_io-page.unix
<lib_test/*.ml{,i,y}>: pkg_ipaddr
<lib_test/*.ml{,i,y}>: pkg_lwt
<lib_test/*.ml{,i,y}>: pkg_lwt.unix
<lib_test/*.ml{,i,y}>: pkg_mirage-console.unix
<lib_test/*.ml{,i,y}>: pkg_mirage-flow
<lib_test/*.ml{,i,y}>: pkg_mirage-profile
<lib_test/*.ml{,i,y}>: pkg_mirage-types
<lib_test/*.ml{,i,y}>: pkg_mirage-vnetif
<lib_test/*.ml{,i,y}>: pkg_oUnit
<lib_test/*.ml{,i,y}>: pkg_tcpip.ethif
<lib_test/*.ml{,i,y}>: use_channel
<lib_test/*.ml{,i,y}>: use_ipv4
<lib_test/*.ml{,i,y}>: use_ipv6
<lib_test/*.ml{,i,y}>: use_tcp
<lib_test/*.ml{,i,y}>: use_tcpip
"lib_test/test.byte": custom
# OASIS_STOP
true: annot, bin_annot, principal, strict_sequence, debug
<tcp/pcb.ml>: pkg_cstruct.syntax
<lib/wire_structs.ml>: pkg_cstruct.syntax
<lib/arpv4.ml>: pkg_cstruct.syntax
<dhcp/dhcp_clientv4.ml>: pkg_cstruct.syntax
